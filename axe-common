	#vars that work :)
	_AXE_DIR='/root/axebuilder'
	_AXE_MAKEPKG_CONF_PATH='/etc/makepkg.conf'
	_AXE_PACMAN_CONF_PATH='/etc/pacman.conf'
	_AXE_BASH_PROFILE_PATH='/etc/profile'
	_AXE_FSTAB_PATH='/etc/fstab'
	_AXE_CPUINFO_PATH='/proc/cpuinfo'
	_AXE_WHERE_I_LIVE_PATH='/usr/bin'
	_AXE_MY_VERSION='0.0.1'
	
	
	#calculate subdirs created by setup
	#build locations
	_AXE_CHROOT_BUILD_DIR="$_AXE_DIR/AxeBuildChroot"
	_AXE_HDD_BUILD_DIR="$_AXE_DIR/AxeBuildHdd"
	_AXE_RAM_BUILD_DIR="/tmp/axebuild"
	#general
	_AXE_PACMAN_CACHE_DIR="$_AXE_DIR/AxePacmanCache"
	_AXE_GIT_PKGBUILD_DIR="$_AXE_DIR/AxeGitPkgbuilds"
	_AXE_GIT_BIN_DIR="$_AXE_DIR/AxeGitBinaries"
	_AXE_GIT_BASE_INFORMATION_DIR="$_AXE_DIR/AxeBaseInformation"
	#log dirs
	_AXE_LOGS_DIR="$_AXE_DIR/AxeBuildLogsProgress"
	_AXE_FAIL_BUILD_LOGS_DIR="$_AXE_DIR/AxeBuildLogsFailed"
	_AXE_LISTS_DIR="$_AXE_DIR/AxeBuildLogsFailed"
	#pkgbuild input dirs
	_AXE_PKGBUILD_DIR="$_AXE_DIR/AxePkgbuilds"
	_AXE_INPUT_PKGBUILD_DIR="$_AXE_DIR/AxePkgbuildsInput"
	_AXE_USER_OVERIDE_PKGBUILD_DIR="$_AXE_DIR/AxePkgbuildsUserOveride"
	#binary repo dirs
	_AXE_LOCAL_BINARY_REPO_DIR="$_AXE_DIR/AxeBinaryRepoLocal"
	_AXE_STAGE2_BINARY_REPO_DIR="$_AXE_DIR/AxeBinaryRepoStage2"
	_AXE_STAGE3_BINARY_REPO_DIR="$_AXE_DIR/AxeBinaryRepoStage3"
	#export dirs
	_AXE_BINARY_EXPORT_DIR_X64="$_AXE_DIR/AxeExportsBinaryX64"
	_AXE_BINARY_EXPORT_DIR="$_AXE_DIR/AxeExportsBinary"
	_AXE_SRC_EXPORT_DIR="$_AXE_DIR/AxeExportsAllSource"
	_AXE_DEV_UPDATE_EXPORT_DIR="$_AXE_DIR/AxePkgbuildsUpdatable"
	

	
	#fixed urls
	
	_AXE_PKGBUILD_GIT_URL='git://github.com/Jubei-Mitsuyoshi/AXE-PKGBUILDS.git'
	_AXE_REPO_INFO_URL='git://github.com/Jubei-Mitsuyoshi/AXE-REPO-INFORMATION.git'
	_AXE_ARCHLINUX_COMMUNITY_GIT_URL="git://projects.archlinux.org/svntogit/community.git"
	_AXE_ARCHLINUX_PACKAGES_GIT_URL="git://projects.archlinux.org/svntogit/packages.git"
	_AXE_PORTAGE_URL="http://de-mirror.org/gentoo/snapshots/portage-latest.tar.xz"
	
	#git locations
	_AXE_GIT_MAINTAINED_PKGBUILD_DIR="$_AXE_GIT_PKGBUILD_DIR/AXE-MAINTAINED"

	# runit init settings
	_AXE_HARDWARECLOCK='localtime'
	_AXE_TIMEZONE='Europe/Copenhagen'
	_AXE_KEYMAP='dk'
	_AXE_CONSOLEFONT=""
	_AXE_CONSOLEMAP=""
	_AXE_DAEMON_ARRAY='syslog-ng acpid eth0 crond agetty-tty1'
	
	#usb stick locations
	_AXE_USB_STICK_DEVICE='/dev/sdd'
	_AXE_USB_STICK_MNT='/mnt/usbstick'
	_AXE_USB_MAINTAINED_PKGBUILD_DIR='AXE-MAINTAINED'
	_AXE_USB_I7_TOOLCHAIN_BIN_DIR='I7-TOOLCHAIN'
	_AXE_INIT_BIN_DIR='RUNIT-MUSL'
	_AXE_USB_UPDATEABLE_PKGBUILD_DIR='AxePkgbuilds_NeedingUpdating'
	
	
	
	#initialise vars (INTS)
	_AXE_CORES=0
	_AXE_GLIBC_REP=1
	_AXE_GCC_REP=1
	_AXE_BINUTILS_REP=1
	_AXE_LIBTOOL_REP=1
	_AXE_LIBLTDL_REP=0
	_AXE_LINUX_MENU_YES=0
	_AXE_VERBOSE_YES=0
	_AXE_ESCAPE=50
	
	#initialise vars (CHARS)
	_AXE_TMP_CHAR=""
	_AXE_LINUX_O2_O3='--o2'
	
	
	
	#defaults ( should all be listed in save_settings )
	#resumes
	_AXE_RESUME_YES=0
	
	# choices
	_AXE_OPT_TYPE="--o2"
	_AXE_SKIP_INTRO_YES=0
	_AXE_GLOBAL_CHECK="--nocheck"
	_AXE_BOOTSTRAP=""
	
	#program stage counters
	_AXE_STAGE=1
	_AXE_TOOLCHAIN_OPTIMUM_YES=0
	_AXE_FIRST_RUN_COMPLETE_YES=0
	_AXE_DESKTOP_STAGE=1
	_AXE_NVIDIA_STAGE=1
	
	#exports
	_AXE_CUPS=0
	_AXE_BLUETOOTH=1
	_AXE_COLORD=0
	_AXE_NETWORKMANAGER=1
	_AXE_PROCESOR_REL="i7"

	
	#menu variables
	_AXE_SOURCES_FETCHED_YES=0
	_AXE_VERSIONS_CHECKED_YES=0
	_AXE_INIT_REPLACED_YES=0
	_AXE_UDEV_INSTALLED_YES=0
	_AXE_PKGBUILD_DIR_FILLED_YES=0
	_AXE_PKGBUILD_GIT_FETCHED_YES=0
	_AXE_BINARY_GIT_FETCHED_YES=0
	_AXE_BASE_GIT_FETCHED_YES=0
	_AXE_BINARY_DIR_FILLED_YES=0
	_AXE_ARCHLINUX_GITS_FETCHED_YES=0
	_AXE_MAKEPKG_CONF_SETUP_YES=0
	_AXE_CPU_IDENTIFIED_YES=0
	
	
	
	#tags
	_AXE_PACKAGER_NAME_STAGE1_BINARIES="undecided"
	_AXE_PACKAGER_NAME_STAGE2_BINARIES="undecided"
	_AXE_PACKAGER_NAME_STAGE3_BINARIES="undecided"
	_AXE_PACKAGER_NAME_TOOLCHAIN="undecided"
	_AXE_PACKAGER_NAME_TOOLCHAIN_MULTILIB="undecided"
	_AXE_MULTILIB_SUFFIX="undecided"
	_AXE_BIN_GIT_URL='git://github.com/Jubei-Mitsuyoshi/AXE-REPO-Intel-Core-i3-2000--Core-i5-2000--Core-i7-2000--Sandy-Bridge-D2J1Q0--32nm.git'
	_AXE_REMOTE_GIT_REPO_ENTRY='Server = https://github.com/Jubei-Mitsuyoshi/AXE-REPO-Intel-Core-i3-2000--Core-i5-2000--Core-i7-2000--Sandy-Bridge-D2J1Q0--32nm.git/raw/master/'
	_AXE_PREFIX_REL='999'
	_AXE_SUFFIX_REL='axis'
	
	txtred='\e[0;31m' # red
	txtgrn='\e[0;32m' # green
	txtylw='\e[0;33m' # yellow
	txtblu='\e[0;34m' # blue
	txtpur='\e[0;35m' # purple
	txtcyn='\e[0;36m' # cyan
	txtwht='\e[0;37m' # white
	bldred='\e[1;31m' # red - Bold
	bldgrn='\e[1;32m' # green
	bldylw='\e[1;33m' # yellow
	bldblu='\e[1;34m' # blue
	bldpur='\e[1;35m' # purple
	bldcyn='\e[1;36m' # cyan
	bldwht='\e[1;37m' # white
	txtund=$(tput sgr 0 1) # Underline
	txtbld=$(tput bold) # Bold
	txtrst='\e[0m' # Text reset


	# Feedback indicators
	_AXE_ANY_KEY="${bldblu} ANY KEY ${bldwht}"
	_AXE_ANY_OTHER_KEY="${bldblu} ANY OTHER KEY ${bldwht}"
	_AXE_CTRLC="${bldcyn} CTRL-C ${bldwht}"
	_AXE_AER="${bldcyn}A${bldwht}rch e${bldcyn}X${bldwht}tream r${bldcyn}E${bldwht}builder"



# list functions these lists are here to allow easy edditing ***************************************************************************************************
#***************************************************************************************************************************************************************


function create_helper_axe_get_vers()
{
	
	


# dialog functions *********************************************************************************************************************************************
#***************************************************************************************************************************************************************

function any_key()
{
		echo -e " ${bldgrn}AXE-->${bldwht} press ${_AXE_ANY_KEY} to continue  ${txtrst}"
		read -n1 -s
}

function axe_info()
{

	#argument 1 text to display
		# xxx .. text to display...
		
		echo -e " ${bldgrn}AXE-->${bldwht} $1 ${txtrst}"
}

function axe_block()
{

	#argument 1 text to display
		# xxx .. text to display...
		
		echo -e "${bldblu}BLOCK-->${txtgrn} $1 ${txtrst}"
}

function axe_warn()
{

	#argument 1 text to display
		# xxx .. text to display...
		
		echo -e "  ${bldylw}AXE---WARNING-->${bldwht} $1 ${txtrst}"
}

function axe_fuck()
{

	#argument 1 text to display
		# xxx .. text to display...
		
		echo -e "${bldred}AXE!!--> $1 ${txtrst}"
}

function axe_debug()
{

	#argument 1 text to display
		# xxx .. text to display...
		
		echo -e "${bldpur}DEBUG-->${bldwht} $1 ${txtrst}"
}

function axe_menu_inactive()
{
	#argument 1 menu key
		# x .. key to display
	#argument 2 text to display
		# xxx .. text to display...
		
		echo -e "${bldwht}KEY======  ${bldblu} $1 ${txtcyn} $2 ${txtrst}"
}

function axe_menu_active()
{
	#argument 1 menu key
		# x .. key to display
	#argument 2 text to display
		# xxx .. text to display...
		
		echo -e "${bldwht}KEY======  ${bldblu} $1 ${txtgrn} $2 ${txtrst}"
}

#  save settings************************************************************************************************************************************************
#***************************************************************************************************************************************************************

function save_settings()
{

	#save new settings
	echo "_AXE_OPT_TYPE=\"$_AXE_OPT_TYPE\"
_AXE_PROCESOR_REL=\"$_AXE_PROCESOR_REL\"
_AXE_PACKAGER_NAME_STAGE1_BINARIES=\"$_AXE_PACKAGER_NAME_STAGE1_BINARIES\"
_AXE_PACKAGER_NAME_STAGE2_BINARIES=\"$_AXE_PACKAGER_NAME_STAGE2_BINARIES\"
_AXE_PACKAGER_NAME_STAGE3_BINARIES=\"$_AXE_PACKAGER_NAME_STAGE3_BINARIES\"
_AXE_PACKAGER_NAME_TOOLCHAIN=\"$_AXE_PACKAGER_NAME_TOOLCHAIN\"
_AXE_PACKAGER_NAME_TOOLCHAIN_MULTILIB=\"$_AXE_PACKAGER_NAME_TOOLCHAIN_MULTILIB\"
_AXE_MULTILIB_SUFFIX=\"$_AXE_MULTILIB_SUFFIX\"
_AXE_GLOBAL_CHECK=\"$_AXE_GLOBAL_CHECK\"
_AXE_BIN_GIT_URL=\"$_AXE_BIN_GIT_URL\"
_AXE_REMOTE_GIT_REPO_ENTRY=\"$_AXE_REMOTE_GIT_REPO_ENTRY\"
_AXE_PREFIX_REL=\"$_AXE_PREFIX_REL\"
_AXE_SUFFIX_REL=\"$_AXE_SUFFIX_REL\"
_AXE_BOOTSTRAP=\"$_AXE_BOOTSTRAP\"
_AXE_STAGE=$_AXE_STAGE
_AXE_DESKTOP_STAGE=$_AXE_DESKTOP_STAGE
_AXE_NVIDIA_STAGE=$_AXE_NVIDIA_STAGE
_AXE_RESUME_YES=$_AXE_RESUME_YES
_AXE_TOOLCHAIN_OPTIMUM_YES=$_AXE_TOOLCHAIN_OPTIMUM_YES
_AXE_FIRST_RUN_COMPLETE_YES=$_AXE_FIRST_RUN_COMPLETE_YES
_AXE_SKIP_INTRO_YES=$_AXE_SKIP_INTRO_YES
_AXE_MAKEPKG_CONF_SETUP_YES=$_AXE_MAKEPKG_CONF_SETUP_YES
_AXE_PKGBUILD_GIT_FETCHED_YES=$_AXE_PKGBUILD_GIT_FETCHED_YES
_AXE_BINARY_GIT_FETCHED_YES=$_AXE_BINARY_GIT_FETCHED_YES
_AXE_BASE_GIT_FETCHED_YES=$_AXE_BASE_GIT_FETCHED_YES
_AXE_ARCHLINUX_GITS_FETCHED_YES=$_AXE_ARCHLINUX_GITS_FETCHED_YES
_AXE_PKGBUILD_DIR_FILLED_YES=$_AXE_PKGBUILD_DIR_FILLED_YES
_AXE_BINARY_DIR_FILLED_YES=$_AXE_BINARY_DIR_FILLED_YES
_AXE_UDEV_INSTALLED_YES=$_AXE_UDEV_INSTALLED_YES
_AXE_SOURCES_FETCHED_YES=$_AXE_SOURCES_FETCHED_YES
_AXE_VERSIONS_CHECKED_YES=$_AXE_VERSIONS_CHECKED_YES
_AXE_INIT_REPLACED_YES=$_AXE_INIT_REPLACED_YES
_AXE_CPU_IDENTIFIED_YES=$_AXE_CPU_IDENTIFIED_YES
_AXE_CUPS=$_AXE_CUPS
_AXE_BLUETOOTH=$_AXE_BLUETOOTH
_AXE_COLORD=$_AXE_COLORD
_AXE_NETWORKMANAGER=$_AXE_NETWORKMANAGER" > "$_AXE_DIR/settings"
	if [[ $? -eq 0 ]]; then
		axe_block "settings saved"
	else
		axe_fuck "problem with saving settings, check the error output above"
		any_key
	fi
	
}


# functions that do not call any other internal functions except dialogs and save settings**********************************************************************
#***************************************************************************************************************************************************************

function copy_pkgbuild_single()
{
	#first argument is pkgbuild name
		#xxxxxx ...pkgbuild name
	#second argument is destination path
		#xxxxxx ... path/to/dir (either hdd build dir or ram build dir usually)
	#third argument is the single input path, defaults to $_AXE_PKGBUILD_DIR
		#xxxxxx ... path/to/dir
		
	local _axe_return
	_axe_return=0
	local _axe_source
	_axe_source=""
	
	axe_block "Start of copy_pkgbuild_single $1 from $3 to $2"

	_axe_source="$_AXE_PKGBUILD_DIR"
	[[ $3 ]] && _axe_source="$3"
	

	find "$_axe_source" -type d -name "$1" -exec cp -rfp {} "$2" \; 2> /dev/null
	if [[ ! -d "$2/$1" ]]; then
		axe_fuck "ok something is seariously wrong cannot locate the $1 pkg build directory in my lookup locations check the code!!!"
		any_key
		_axe_return=1
	else
		axe_info "found ${bldcyn} $1 PKGBUILD in $_axe_source ${bldwht}fetching and using it as source PKGBUILD"
	fi

	

	return $_axe_return
}
